"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function getSafeRunner(){function e(e){return Function("return eval("+(0,_stringify2.default)(e+"")+")")}var n=this;return function(s,t){var o=function(e){s.send(e,(0,_stringify2.default)([].slice.call(arguments,1)))};n.print=o.bind(n,"stdout"),n.console={log:o.bind(n,"stdout")},n.process={stdout:{write:o.bind(n,"stdout")}},n.postMessage=o.bind(n,"message"),o("end",e(t)())}}function run(){var e=vm.createContext();e.setTimeout=function(e,n){"string"==typeof e?setTimeout(new Function(e),n):setTimeout(e,n)},e.clearTimeout=clearTimeout;var n=vm.runInContext("("+getSafeRunner.toString()+")()",e);try{n({send:function(e,n){switch(e){case"stdout":case"end":process.stdout.write(JSON.parse(n)[0]);break;case"message":process.send(JSON.parse(n)[0]);break;default:throw new Error("Unknown event type")}},exit:function(){processExit()}},code)}catch(e){result=e.name+": "+e.message}process.on("message",processMessageListener.bind(null,e)),process.send("__sandbox_inner_ready__"),checkIfProcessFinished(e)}function processMessageListener(e,n){vm.runInContext('if (typeof onmessage === "function") { onmessage('+(0,_stringify2.default)(String(n))+"); }",e),checkIfProcessFinished(e)}function checkIfProcessFinished(e){"function"!==vm.runInContext("typeof onmessage",e)&&processExit()}function processExit(){process.removeListener("message",processMessageListener),process.stdout.on("finish",function(){process.exit(0)})}var _stringify=require("babel-runtime/core-js/json/stringify"),_stringify2=_interopRequireDefault(_stringify),fs=require("fs"),NodeVM=require("vm2").NodeVM,code="",stdin=process.openStdin(),result,console=[];stdin.on("data",function(e){code+=e}),stdin.on("end",run);